{"contents":"exports.__esModule = true;\nvar react_1 = __fusereq(4);\nvar react_1d = __fuse.dt(react_1);\nvar formik_1 = __fusereq(35);\nvar yup_1 = __fusereq(161);\nconst LoginSchema = yup_1.object().shape({\n  username: yup_1.string().required(\"Required\"),\n  password: yup_1.string().required(\"Required\")\n});\nfunction LoginForm() {\n  const initalValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const defaultInputClassName = \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\n  const errorInputClassName = \"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\";\n  const logIn = ({username}) => {\n    localStorage.setItem(\"creds\", username + \"-\" + Math.random());\n    window.location.href = \"/home\";\n  };\n  return react_1d.default.createElement(\"div\", {\n    className: \"flex justify-center items-center flex-col absolute top-0 right-0 left-0 bottom-0\"\n  }, react_1d.default.createElement(\"div\", {\n    className: \"w-full max-w-sm\"\n  }, react_1d.default.createElement(formik_1.Formik, {\n    initialValues: initalValues,\n    onSubmit: values => logIn(values),\n    validationSchema: LoginSchema,\n    render: ({values, errors, submitForm}) => {\n      return react_1d.default.createElement(formik_1.Form, {\n        className: \"bg-white mr-1 ml-1 shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n      }, react_1d.default.createElement(formik_1.Field, {\n        name: \"username\",\n        value: values.username,\n        render: ({field}) => react_1d.default.createElement(\"div\", {\n          className: \"mb-4\"\n        }, react_1d.default.createElement(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          htmlFor: \"username\"\n        }, \"\\n                        Username\\n                      \"), react_1d.default.createElement(\"input\", Object.assign({}, field, {\n          className: errors.username ? errorInputClassName : defaultInputClassName,\n          id: \"username\",\n          type: \"text\",\n          placeholder: \"Username\"\n        })), errors.username && react_1d.default.createElement(\"p\", {\n          className: \"text-red-500 text-xs italic\"\n        }, errors.username))\n      }), react_1d.default.createElement(formik_1.Field, {\n        name: \"password\",\n        value: values.password,\n        render: ({field}) => react_1d.default.createElement(\"div\", {\n          className: \"mb-6\"\n        }, react_1d.default.createElement(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          htmlFor: \"password\"\n        }, \"\\n                        Password\\n                      \"), react_1d.default.createElement(\"input\", Object.assign({}, field, {\n          className: errors.password ? errorInputClassName : defaultInputClassName,\n          id: \"password\",\n          type: \"password\",\n          placeholder: \"******************\"\n        })), errors.password && react_1d.default.createElement(\"p\", {\n          className: \"text-red-500 text-xs italic\"\n        }, errors.password))\n      }), react_1d.default.createElement(\"div\", {\n        className: \"flex items-center justify-between\"\n      }, react_1d.default.createElement(\"button\", {\n        onClick: submitForm,\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n        type: \"submit\"\n      }, \"\\n                    Sign In\\n                  \"), react_1d.default.createElement(\"a\", {\n        className: \"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\",\n        href: \"#\"\n      }, \"\\n                    Forgot Password?\\n                  \")));\n    }\n  }), react_1d.default.createElement(\"p\", {\n    className: \"text-center text-gray-500 text-xs\"\n  }, \"\\n          &copy;2020 Acme Corp. All rights reserved.\\n        \")));\n}\nexports.LoginForm = LoginForm;\n","sourceMap":"{\"version\":3,\"sources\":[\"src/views/components/forms/login-form.tsx\"],\"names\":[\"LoginSchema\",\"object\",\"shape\",\"username\",\"string\",\"required\",\"password\",\"initalValues\",\"defaultInputClassName\",\"errorInputClassName\",\"logIn\",\"localStorage\",\"setItem\",\"Math\",\"random\",\"window\",\"location\",\"href\",\"formik_1\",\"values\",\"errors\",\"submitForm\",\"field\"],\"mappings\":\";;;;;MASMA,oBAAkBC,SAASC;EAC/BC,gBAAcC,SAASC,SAAS;EAChCC,gBAAcF,SAASC,SAAS;;AAG3B;QACCE;IAAiBJ,UAAU;IAAIG,UAAU;;QAEzCE,wBACJ;QACIC,sBACJ;QAEIC,QAAQ,EAAGP;IACfQ,aAAaC,QAAQ,SAAST,WAAW,MAAMU,KAAKC;IACpDC,OAAOC,SAASC,OAAO;;;eAIR;;eACE;oCACZC;mBACgBX;cACL,AAACY,UAAWT,MAAMS;sBACVnB;YACV,EAAGmB,QAAQC,QAAQC;4CAEtBH;mBAAe;wCACbA;cACM;eACEC,OAAOhB;gBACN,EAAGmB;qBACM;;qBAED;mBACF;oIAKJA;qBAEFF,OAAOjB,WACHM,sBACAD;cAEH;gBACE;uBACO;aAEbY,OAAOjB;qBACO;WACViB,OAAOjB;yCAMjBe;cACM;eACEC,OAAOb;gBACN,EAAGgB;qBACM;;qBAED;mBACF;oIAKJA;qBAEFF,OAAOd,WACHG,sBACAD;cAEH;gBACE;uBACO;aAEbY,OAAOd;qBACO;WACVc,OAAOd;;mBAOH;;iBAEFe;mBACC;cACL;;mBAKK;cACL;;;;eAUJ\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport { Formik, Form, Field, FieldProps, FormikProps } from \\\"formik\\\";\\nimport * as yup from \\\"yup\\\";\\n\\nexport interface LoginDto {\\n  username: string;\\n  password: string;\\n}\\n\\nconst LoginSchema = yup.object().shape({\\n  username: yup.string().required(\\\"Required\\\"),\\n  password: yup.string().required(\\\"Required\\\"),\\n});\\n\\nexport function LoginForm() {\\n  const initalValues = { username: \\\"\\\", password: \\\"\\\" };\\n\\n  const defaultInputClassName =\\n    \\\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\";\\n  const errorInputClassName =\\n    \\\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\";\\n\\n  const logIn = ({ username }: LoginDto) => {\\n    localStorage.setItem(\\\"creds\\\", username + \\\"-\\\" + Math.random());\\n    window.location.href = \\\"/home\\\";\\n  };\\n\\n  return (\\n    <div className=\\\"flex justify-center items-center flex-col absolute top-0 right-0 left-0 bottom-0\\\">\\n      <div className=\\\"w-full max-w-sm\\\">\\n        <Formik\\n          initialValues={initalValues}\\n          onSubmit={(values) => logIn(values)}\\n          validationSchema={LoginSchema}\\n          render={({ values, errors, submitForm }: FormikProps<LoginDto>) => {\\n            return (\\n              <Form className=\\\"bg-white mr-1 ml-1 shadow-md rounded px-8 pt-6 pb-8 mb-4\\\">\\n                <Field\\n                  name=\\\"username\\\"\\n                  value={values.username}\\n                  render={({ field }: FieldProps) => (\\n                    <div className=\\\"mb-4\\\">\\n                      <label\\n                        className=\\\"block text-gray-700 text-sm font-bold mb-2\\\"\\n                        htmlFor=\\\"username\\\"\\n                      >\\n                        Username\\n                      </label>\\n                      <input\\n                        {...field}\\n                        className={\\n                          errors.username\\n                            ? errorInputClassName\\n                            : defaultInputClassName\\n                        }\\n                        id=\\\"username\\\"\\n                        type=\\\"text\\\"\\n                        placeholder=\\\"Username\\\"\\n                      />\\n                      {errors.username && (\\n                        <p className=\\\"text-red-500 text-xs italic\\\">\\n                          {errors.username}\\n                        </p>\\n                      )}\\n                    </div>\\n                  )}\\n                />\\n                <Field\\n                  name=\\\"password\\\"\\n                  value={values.password}\\n                  render={({ field }: FieldProps) => (\\n                    <div className=\\\"mb-6\\\">\\n                      <label\\n                        className=\\\"block text-gray-700 text-sm font-bold mb-2\\\"\\n                        htmlFor=\\\"password\\\"\\n                      >\\n                        Password\\n                      </label>\\n                      <input\\n                        {...field}\\n                        className={\\n                          errors.password\\n                            ? errorInputClassName\\n                            : defaultInputClassName\\n                        }\\n                        id=\\\"password\\\"\\n                        type=\\\"password\\\"\\n                        placeholder=\\\"******************\\\"\\n                      />\\n                      {errors.password && (\\n                        <p className=\\\"text-red-500 text-xs italic\\\">\\n                          {errors.password}\\n                        </p>\\n                      )}\\n                    </div>\\n                  )}\\n                />\\n\\n                <div className=\\\"flex items-center justify-between\\\">\\n                  <button\\n                    onClick={submitForm}\\n                    className=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\\\"\\n                    type=\\\"submit\\\"\\n                  >\\n                    Sign In\\n                  </button>\\n                  <a\\n                    className=\\\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\\\"\\n                    href=\\\"#\\\"\\n                  >\\n                    Forgot Password?\\n                  </a>\\n                </div>\\n              </Form>\\n            );\\n          }}\\n        />\\n\\n        <p className=\\\"text-center text-gray-500 text-xs\\\">\\n          &copy;2020 Acme Corp. All rights reserved.\\n        </p>\\n      </div>\\n    </div>\\n  );\\n}\\n\"]}"}